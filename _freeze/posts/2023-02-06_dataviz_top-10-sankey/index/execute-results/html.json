{
  "hash": "3fba2d9d359f46c960056406768d1c3e",
  "result": {
    "markdown": "---\ntitle: '2022-09-01 Dataviz - Top 10 Sankey'\ndate: '2023-02-06'\ndraft: true\nexecute:\n  freeze: true\ncode-fold: false\nengine: knitr\n---\n\n\n# Obtain data\n\nThis blogpost walks through how to obtain data about albums https://medium.com/@caineosborne/analysing-uk-chart-history-1956-to-2017-6fec0ecc991b\n\nThis gives the Top 20 albums on 1961-07-02\n\nhttp://www.officialcharts.com/charts/albums-chart/19610702/7502/\n\nThis gives the Top 100 singles for 1999-12-26 to 2000-01-01\n\nhttps://www.officialcharts.com/charts/singles-chart/19991226/7501/\n\nLet's generate the dates from then until now\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   1.0.1 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.3.0      ✔ stringr 1.5.0 \n✔ readr   2.1.3      ✔ forcats 1.0.0 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\nlibrary(lubridate)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'lubridate'\n\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n```\n:::\n\n```{.r .cell-code}\nlibrary(janitor)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'janitor'\n\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n```\n:::\n\n```{.r .cell-code}\nlibrary(rvest)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'rvest'\n\nThe following object is masked from 'package:readr':\n\n    guess_encoding\n```\n:::\n\n```{.r .cell-code}\nlibrary(furrr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: future\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndates_charts <- seq(ymd(\"1999-12-26\"), ymd(\"2023-01-01\"), \"7 days\")\n```\n:::\n\n\nThis function will extract the data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nget_week_top100_data <- function(week_start) {\n  \n  raw_date = str_remove_all(week_start, \"-\")\n  \n  page_results <-\n    str_glue(\"https://www.officialcharts.com/charts/singles-chart/{raw_date}/7501/\") %>%\n    read_html()\n  \n  \n  page_results %>%\n    html_table() %>%\n    .[[1]] %>%\n    clean_names() %>%\n    filter(pos %in% as.character(1:100)) %>%\n    select(1:3) %>%\n    separate(title_artist,\n             sep = \"\\r\\n                        \\r\\n                        \\r\\n\\r\\n                            \",\n             into = c(\"title\", \"artist_label\")) %>%\n    separate(artist_label,\n             sep = \"\\r\\n                        \\r\\n                        \",\n             into = c(\"artist\", \"label\")) %>%\n    set_names(c(\n      \"position_current\",\n      \"position_previous\",\n      \"title\",\n      \"artist\",\n      \"label\"\n    )) %>% \n    mutate(date_week_start = week_start) %>% \n    relocate(date_week_start)\n}\n\ndates_charts[1] %>% \n  get_week_top100_data()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 100 × 6\n   date_week_start position_current position_previous title         artist label\n   <date>          <chr>            <chr>             <chr>         <chr>  <chr>\n 1 1999-12-26      1                1                 I HAVE A DRE… WESTL… RCA  \n 2 1999-12-26      2                2                 THE MILLENNI… CLIFF… PAPI…\n 3 1999-12-26      3                3                 IMAGINE       JOHN … PARL…\n 4 1999-12-26      4                8                 MR. HANKEY T… MR HA… COLU…\n 5 1999-12-26      5                6                 RE-REWIND TH… ARTFU… RELE…\n 6 1999-12-26      6                5                 TWO IN A MIL… S CLU… POLY…\n 7 1999-12-26      7                4                 COGNOSCENTI … CUBAN… EMI  \n 8 1999-12-26      8                7                 SAY YOU'LL B… STEPS  JIVE \n 9 1999-12-26      9                10                KISS (WHEN T… VENGA… POSI…\n10 1999-12-26      10               11                BACK IN MY L… ALICE… POSI…\n# … with 90 more rows\n```\n:::\n:::\n\n\nNow let's map this\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplan(multisession)\ndata_raw_all_charts <- dates_charts %>% \n  future_map_dfr(get_week_top100_data)\n\ndata_raw_all_charts %>% \n  write_csv(here::here(\"posts\", \"2023-02-06_dataviz_top-10-sankey\", \"data_raw_all_charts.csv\"))\n```\n:::\n\n\n# Explore and tidy up\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_raw_all_charts <- read_csv(here::here(\"posts\", \"2023-02-06_dataviz_top-10-sankey\", \"data_raw_all_charts.csv\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 119900 Columns: 6\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (4): position_previous, title, artist, label\ndbl  (1): position_current\ndate (1): date_week_start\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n\nThere are ZERO `NA` values!!!\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_charts_with_ids <- data_raw_all_charts %>% \n  group_by(title, artist) %>% \n  mutate(id_title_artist = cur_group_id()) %>%\n  group_by(title, artist, label) %>% \n  mutate(id_title_artist_label = cur_group_id()) %>% \n  ungroup()\n```\n:::\n\n\nThere are 399 more unique songs when splitting the data by Title, Artist and Label. \n\nAfter looking at these everything feel okay. I can go with title and artist ids.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_charts_with_ids %>% \n  group_by(title, artist) %>% \n  mutate(n_labels = n_distinct(label)) %>% \n  ungroup() %>% \n  filter(n_labels > 1) %>% \n  select(title, artist, label, contains(\"id\"), n_labels) %>% \n  unique() %>% \n  arrange(title, artist)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 784 × 6\n   title             artist       label            id_title_ar…¹ id_ti…² n_lab…³\n   <chr>             <chr>        <chr>                    <int>   <int>   <int>\n 1 1999              PRINCE       WARNER BROS                 89      89       2\n 2 1999              PRINCE       WEA                         89      90       2\n 3 21 GUNS           GREEN DAY    REPRISE                    115     116       2\n 4 21 GUNS           GREEN DAY    WARNER BROS                115     117       2\n 5 21ST CENTURY LIFE SAM SPARRO   UNIVERSAL                  124     127       2\n 6 21ST CENTURY LIFE SAM SPARRO   ISLAND                     124     126       2\n 7 22                LILY ALLEN   PARLOPHONE                 125     128       2\n 8 22                LILY ALLEN   REGAL RECORDINGS           125     129       2\n 9 4 IN THE MORNING  GWEN STEFANI INTERSCOPE                 175     179       2\n10 4 IN THE MORNING  GWEN STEFANI POLYDOR                    175     180       2\n# … with 774 more rows, and abbreviated variable names ¹​id_title_artist,\n#   ²​id_title_artist_label, ³​n_labels\n```\n:::\n:::\n\n\n## Inserting consecutiveness\n\nposition_previous needs recoding\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_charts_with_lags <- data_charts_with_ids %>%\n  arrange(date_week_start) %>%\n  group_by(id_title_artist) %>%\n  mutate(\n    position_next = lead(position_current, order_by = date_week_start)\n  ) %>% \n  ungroup() %>% \n  mutate(status = case_when(position_previous == \"New\" ~ \"New release\",\n                            position_previous == \"Re\" ~ \"Re-release\",\n                            !is.na(position_next) ~ \"Consecutive week\"),\n         position_previous = as.numeric(position_previous))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in mask$eval_all_mutate(quo): NAs introduced by coercion\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_charts_with_rereleases <- data_charts_with_lags %>% \n  arrange(date_week_start, id_title_artist) %>% \n  group_by(id_title_artist) %>%\n  arrange(date_week_start) %>% \n  mutate(check_rerelease = ifelse(status == \"Re-release\", 1, 0)) %>%\n  mutate(check_rerelease = case_when(\n    date_week_start == min(date_week_start) ~ 0, # handle re-release in first week of data\n    status == \"Re-release\" ~ 1,\n    TRUE ~ 0\n  )) %>%\n  mutate(nth_time_on_chart = cumsum(check_rerelease) + 1) %>%\n  ungroup()\n```\n:::\n\n\n## Look at re-releases\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_charts_with_rereleases %>% \n  select(date_week_start, title, starts_with(\"position\"), nth_time_on_chart, everything()) %>% \n  filter(title == \"SHAPE OF YOU\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 98 × 12\n   date_wee…¹ title posit…² posit…³ posit…⁴ nth_t…⁵ artist label id_ti…⁶ id_ti…⁷\n   <date>     <chr>   <dbl>   <dbl>   <dbl>   <dbl> <chr>  <chr>   <int>   <int>\n 1 2017-01-15 SHAP…       1      NA       1       1 ED SH… ASYL…   12527   12802\n 2 2017-01-22 SHAP…       1       1       1       1 ED SH… ASYL…   12527   12802\n 3 2017-01-29 SHAP…       1       1       1       1 ED SH… ASYL…   12527   12802\n 4 2017-02-05 SHAP…       1       1       1       1 ED SH… ASYL…   12527   12802\n 5 2017-02-12 SHAP…       1       1       1       1 ED SH… ASYL…   12527   12802\n 6 2017-02-19 SHAP…       1       1       1       1 ED SH… ASYL…   12527   12802\n 7 2017-02-26 SHAP…       1       1       1       1 ED SH… ASYL…   12527   12802\n 8 2017-03-05 SHAP…       1       1       1       1 ED SH… ASYL…   12527   12802\n 9 2017-03-12 SHAP…       1       1       1       1 ED SH… ASYL…   12527   12802\n10 2017-03-19 SHAP…       1       1       1       1 ED SH… ASYL…   12527   12802\n# … with 88 more rows, 2 more variables: status <chr>, check_rerelease <dbl>,\n#   and abbreviated variable names ¹​date_week_start, ²​position_current,\n#   ³​position_previous, ⁴​position_next, ⁵​nth_time_on_chart, ⁶​id_title_artist,\n#   ⁷​id_title_artist_label\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_charts_with_rereleases %>% \n  arrange(desc(nth_time_on_chart)) %>% \n  group_by(id_title_artist) %>% \n  filter(nth_time_on_chart == max(nth_time_on_chart)) %>% \n  ungroup() %>% \n  distinct(title, artist, nth_time_on_chart) %>% \n  rename(times_on_chart = nth_time_on_chart) %>% \n  slice(1:10) %>% \n  gt::gt()\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"eulbeapxnz\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>html {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n}\n\n#eulbeapxnz .gt_table {\n  display: table;\n  border-collapse: collapse;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#eulbeapxnz .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#eulbeapxnz .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#eulbeapxnz .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#eulbeapxnz .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 0;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#eulbeapxnz .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#eulbeapxnz .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#eulbeapxnz .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#eulbeapxnz .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#eulbeapxnz .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#eulbeapxnz .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#eulbeapxnz .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#eulbeapxnz .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#eulbeapxnz .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#eulbeapxnz .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#eulbeapxnz .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#eulbeapxnz .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#eulbeapxnz .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#eulbeapxnz .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#eulbeapxnz .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#eulbeapxnz .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#eulbeapxnz .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#eulbeapxnz .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#eulbeapxnz .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#eulbeapxnz .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#eulbeapxnz .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#eulbeapxnz .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#eulbeapxnz .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#eulbeapxnz .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#eulbeapxnz .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-left: 4px;\n  padding-right: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#eulbeapxnz .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#eulbeapxnz .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#eulbeapxnz .gt_left {\n  text-align: left;\n}\n\n#eulbeapxnz .gt_center {\n  text-align: center;\n}\n\n#eulbeapxnz .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#eulbeapxnz .gt_font_normal {\n  font-weight: normal;\n}\n\n#eulbeapxnz .gt_font_bold {\n  font-weight: bold;\n}\n\n#eulbeapxnz .gt_font_italic {\n  font-style: italic;\n}\n\n#eulbeapxnz .gt_super {\n  font-size: 65%;\n}\n\n#eulbeapxnz .gt_footnote_marks {\n  font-style: italic;\n  font-weight: normal;\n  font-size: 75%;\n  vertical-align: 0.4em;\n}\n\n#eulbeapxnz .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#eulbeapxnz .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#eulbeapxnz .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#eulbeapxnz .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#eulbeapxnz .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#eulbeapxnz .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\">\n  \n  <thead class=\"gt_col_headings\">\n    <tr>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"title\">title</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"artist\">artist</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"times_on_chart\">times_on_chart</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"title\" class=\"gt_row gt_left\">MR BRIGHTSIDE</td>\n<td headers=\"artist\" class=\"gt_row gt_left\">KILLERS</td>\n<td headers=\"times_on_chart\" class=\"gt_row gt_right\">58</td></tr>\n    <tr><td headers=\"title\" class=\"gt_row gt_left\">USE SOMEBODY</td>\n<td headers=\"artist\" class=\"gt_row gt_left\">KINGS OF LEON</td>\n<td headers=\"times_on_chart\" class=\"gt_row gt_right\">21</td></tr>\n    <tr><td headers=\"title\" class=\"gt_row gt_left\">ONE DAY LIKE THIS</td>\n<td headers=\"artist\" class=\"gt_row gt_left\">ELBOW</td>\n<td headers=\"times_on_chart\" class=\"gt_row gt_right\">20</td></tr>\n    <tr><td headers=\"title\" class=\"gt_row gt_left\">THRILLER</td>\n<td headers=\"artist\" class=\"gt_row gt_left\">MICHAEL JACKSON</td>\n<td headers=\"times_on_chart\" class=\"gt_row gt_right\">19</td></tr>\n    <tr><td headers=\"title\" class=\"gt_row gt_left\">CHASING CARS</td>\n<td headers=\"artist\" class=\"gt_row gt_left\">SNOW PATROL</td>\n<td headers=\"times_on_chart\" class=\"gt_row gt_right\">18</td></tr>\n    <tr><td headers=\"title\" class=\"gt_row gt_left\">FAIRYTALE OF NEW YORK</td>\n<td headers=\"artist\" class=\"gt_row gt_left\">POGUES FT KIRSTY MACCOLL</td>\n<td headers=\"times_on_chart\" class=\"gt_row gt_right\">18</td></tr>\n    <tr><td headers=\"title\" class=\"gt_row gt_left\">I DON'T WANT TO MISS A THING</td>\n<td headers=\"artist\" class=\"gt_row gt_left\">AEROSMITH</td>\n<td headers=\"times_on_chart\" class=\"gt_row gt_right\">17</td></tr>\n    <tr><td headers=\"title\" class=\"gt_row gt_left\">DON'T STOP ME NOW</td>\n<td headers=\"artist\" class=\"gt_row gt_left\">QUEEN</td>\n<td headers=\"times_on_chart\" class=\"gt_row gt_right\">17</td></tr>\n    <tr><td headers=\"title\" class=\"gt_row gt_left\">MERRY XMAS EVERYBODY</td>\n<td headers=\"artist\" class=\"gt_row gt_left\">SLADE</td>\n<td headers=\"times_on_chart\" class=\"gt_row gt_right\">17</td></tr>\n    <tr><td headers=\"title\" class=\"gt_row gt_left\">ALL I WANT FOR CHRISTMAS IS YOU</td>\n<td headers=\"artist\" class=\"gt_row gt_left\">MARIAH CAREY</td>\n<td headers=\"times_on_chart\" class=\"gt_row gt_right\">16</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n:::\n:::\n\n\n## Finish up\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_3rd_millenium_charts <- data_charts_with_rereleases %>% \n  mutate(year = year(date_week_start)) %>% \n  group_by(id_title_artist) %>% \n  mutate(total_times_on_chart = max(nth_time_on_chart)) %>% \n  ungroup() %>% \n  select(-check_rerelease) %>% \n  group_by(id_title_artist) %>% \n  arrange(id_title_artist, date_week_start) %>% \n  mutate(nth_week_on_chart = n()) %>% \n  mutate(total_weeks_on_chart = max(nth_week_on_chart)) %>% \n  ungroup()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_3rd_millenium_charts <- data_charts_with_rereleases %>% \n  mutate(year = year(date_week_start)) %>% \n  select(-check_rerelease)\n```\n:::\n\n\n# Functions\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngenerate_nth_time_in_charts <- function(data) {\n  data %>%\n    group_by(id_title_artist) %>%\n    mutate(total_times_on_chart = max(nth_time_on_chart)) %>%\n    ungroup() %>%\n    group_by(id_title_artist) %>%\n    arrange(id_title_artist, date_week_start) %>%\n    mutate(nth_week_on_chart = row_number()) %>%\n    mutate(total_weeks_on_chart = max(nth_week_on_chart)) %>%\n    ungroup()\n}\n```\n:::\n\n\n\n# Top 100 Track Lines\n\n## By year\n\nTo start I'm going to look at just 2022 and work up from there\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_top10_2022 <- data_3rd_millenium_charts %>% \n  filter(\n    # date_week_start > ymd(\"2022-01-01\"),\n    #      date_week_start < ymd(\"2023-01-01\"),\n         year == 2022,\n         position_current <= 10) %>% \n  select(date_week_start, starts_with(\"position\"), title, id_title_artist, everything()) %>%\n  mutate(id_song_nth_time = paste(id_title_artist, nth_time_on_chart)) %>% \n  arrange(date_week_start, position_current)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_top10_2022 %>% \n  select(id_song_nth_time, everything())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 520 × 13\n   id_so…¹ date_wee…² posit…³ posit…⁴ posit…⁵ title id_ti…⁶ artist label id_ti…⁷\n   <chr>   <date>       <dbl>   <dbl>   <dbl> <chr>   <int> <chr>  <chr>   <int>\n 1 9354 1  2022-01-02       1       2      40 MERR…    9354 ED SH… ATLA…    9551\n 2 8148 15 2022-01-02       2       3      71 LAST…    8148 WHAM   RCA      8316\n 3 610 15  2022-01-02       3       4      56 ALL …     610 MARIA… COLU…     621\n 4 4359 17 2022-01-02       4       7      57 FAIR…    4359 POGUE… WARN…    4445\n 5 11973 … 2022-01-02       5       9      92 ROCK…   11973 BREND… MCA     12232\n 6 9355 15 2022-01-02       6       8      54 MERR…    9355 SHAKI… RCA      9552\n 7 7577 11 2022-01-02       7      11      49 IT'S…    7577 MICHA… REPR…    7735\n 8 2808 1  2022-01-02       8      10      83 COME…    2808 GEORG… COLU…    2857\n 9 7632 12 2022-01-02       9      15      82 IT'S…    7632 ANDY … SONY…    7792\n10 3894 15 2022-01-02      10      12      76 DRIV…    3894 CHRIS… WARN…    3970\n# … with 510 more rows, 3 more variables: status <chr>,\n#   nth_time_on_chart <dbl>, year <dbl>, and abbreviated variable names\n#   ¹​id_song_nth_time, ²​date_week_start, ³​position_current, ⁴​position_previous,\n#   ⁵​position_next, ⁶​id_title_artist, ⁷​id_title_artist_label\n```\n:::\n:::\n\n\n## Square chart\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_top10_2022 %>% \n  generate_nth_time_in_charts() %>% \n  drop_na(position_next) %>% \n  identity() %>% \n  filter(position_next <= 10) %>% \n  select(date_week_start, position_current, title, id_title_artist, nth_week_on_chart) %>% \n  ggplot(aes(x = date_week_start,\n                y = position_current,\n                group = as.character(id_title_artist),\n             colour = nth_week_on_chart\n             # linewidth = nth_week_on_chart\n             )) +\n  # geom_point(size = 0.3) +\n  # stat_smooth(se = FALSE) +\n  geom_line() +\n  # scale_colour_viridis_c() +\n  scale_colour_gradient(low = \"black\",\n                        high = \"white\") +\n  scale_linewidth_continuous(breaks = c(4, 5, 6)) +\n  guides(colour = guide_none()) +\n  theme_void() +\n  theme(panel.background = element_rect(fill = \"black\")) +\n  NULL\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_3rd_millenium_charts %>% \n  filter(\n    # date_week_start > ymd(\"2022-01-01\"),\n    #      date_week_start < ymd(\"2023-01-01\"),\n         year == 2022,\n         between(position_current, 0, 20)\n         ) %>% \n  select(date_week_start, starts_with(\"position\"), title, id_title_artist, everything()) %>%\n  mutate(id_song_nth_time = paste(id_title_artist, nth_time_on_chart)) %>% \n  arrange(date_week_start, position_current) %>% \n  generate_nth_time_in_charts() %>% \n  drop_na(position_next) %>% \n  identity() %>% \n  filter(position_next <= 20) %>%\n  select(date_week_start, position_current, title, id_title_artist, nth_week_on_chart) %>% \n  ggplot(aes(x = date_week_start,\n                y = position_current,\n                group = as.character(id_title_artist),\n             colour = nth_week_on_chart\n             # linewidth = nth_week_on_chart\n             )) +\n  geom_point() +\n  # stat_smooth(se = FALSE) +\n  geom_line() +\n  # scale_colour_viridis_c() +\n  scale_colour_gradient(low = \"black\",\n                        high = \"white\") +\n  scale_linewidth_continuous(breaks = c(4, 5, 6)) +\n  guides(colour = guide_none()) +\n  theme_void() +\n  theme(panel.background = element_rect(fill = \"black\")) +\n  NULL\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n\n\n## Polar\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_top10_2022 %>% \n  generate_nth_time_in_charts() %>% \n  drop_na(position_next) %>% \n  identity() %>% \n  filter(position_next <= 10) %>% \n  select(date_week_start, position_current, title, id_title_artist, nth_week_on_chart) %>% \n  ggplot(aes(x = date_week_start,\n                y = position_current,\n                group = as.character(id_title_artist),\n             colour = nth_week_on_chart\n             # linewidth = nth_week_on_chart\n             )) +\n  # geom_point() +\n  # stat_smooth(se = FALSE) +\n  geom_line() +\n  # scale_colour_viridis_c() +\n  scale_colour_gradient(low = \"black\",\n                        high = \"white\") +\n  scale_linewidth_continuous(breaks = c(4, 5, 6)) +\n  coord_polar(start = 0) +\n  ylim(0, NA) +\n  # theme_void() +\n  # theme(panel.background = element_rect(fill = \"black\")) +\n  NULL\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n### Instead of song look for runs at the same position\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_top10_2022 %>% \n  filter(position_current <= 5) %>% \n  arrange(date_week_start, position_current) %>% \n  select(date_week_start, starts_with(\"position\"), title, id_title_artist) %>% \n  mutate(position_kept = ifelse(position_current == position_next, 1, 0)) %>%\n  slice(1:40) %>% \n  group_by(position_current, position_kept) %>% \n  group_by(position_current) %>%\n  arrange(date_week_start) %>%\n  mutate(position_run = cumsum(position_kept))  %>%\n  group_by(position_current, id_title_artist, position_kept) %>%\n  mutate(position_run_id = cur_group_id()) %>% \n  ungroup() %>% \n  # View()\n  ggplot(aes(x = date_week_start,\n             y = position_current,\n             colour = position_run_id,\n             group = position_run_id)) +\n  geom_point() +\n  geom_line() +\n  scale_colour_viridis_c()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_top10_2022 %>% \n  filter(position_current <= 6) %>%\n  arrange(date_week_start, position_current) %>% \n  select(date_week_start, starts_with(\"position\"), title, id_title_artist) %>% \n  filter(position_current == position_next) %>% \n  group_by(position_current) %>% \n  arrange(date_week_start) %>% \n  mutate(consecutive_run = lead(date_week_start) == date_week_start + days(7)) %>% \n  mutate(run_length = cumsum(consecutive_run)) %>% \n  ungroup() %>% \n  group_by(position_current, id_title_artist, consecutive_run) %>% \n  mutate(position_run_id = cur_group_id()) %>% \n  ungroup() %>% \n  arrange(date_week_start, position_current) %>% \n  filter(position_current >= 4 & position_current <= 6) %>% \n  ggplot(aes(x = date_week_start,\n             y = position_current,\n             # colour = position_run_id,\n             group = as.character(position_run_id))) +\n  # geom_point() +\n  geom_line() +\n  scale_colour_viridis_c()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}