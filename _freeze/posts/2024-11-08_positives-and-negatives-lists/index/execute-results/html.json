{
  "hash": "bb06bf637de2fb75f1dead7747b2901d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Pros, Cons and Neutrals lists?\"\ndate: '2024-11-08'\nexecute:\n  freeze: true\n  message: false\n  warning: false\n  echo: false\ncode-fold: false\nengine: knitr\nfilters:\n  - line-highlight\n---\n\n::: {.cell}\n\n:::\n\n\n\n\nI thought it would be interesting for me to keep better track of the Pros, Cons and Neutrals that I discover/decide on and to find a way to visualise these nicely. The idea came to me when I was wanting to create a new Quarto blogpost and googled for a quick solution to find [this issue](https://github.com/quarto-dev/quarto-cli/issues/3917) where it's noted\n\n> But a current limitation is that all are R focused rather than general quarto CLI tooling.\n\nThat gets to the heart of something that could put off some R users migrating from RMarkdown to Quarto... but also that's the whole point of Quarto to be cross-platform.\n\nRight! So what would a Pros / Cons / Neutrals list look like? Well, `{bslib}` has nice cards available. So it could be something like this:\n\n::: {.column-page .grid}\n\n::: {.g-col-4}\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"card bslib-card bslib-mb-spacing html-fill-item html-fill-container\" data-bslib-card-init data-full-screen=\"false\" data-require-bs-caller=\"card()\" data-require-bs-version=\"5\" id=\"bslib-card-7814\">\n<div class=\"card-header\">\n‚úÖ\nQuarto installs with few permissions\n</div>\n<div class=\"card-body bslib-gap-spacing html-fill-item html-fill-container\" style=\"margin-top:auto;margin-bottom:auto;flex:1 1 auto;\">\n<p>Makes it really easy to use in training.</p>\n</div>\n<bslib-tooltip placement=\"auto\" bsOptions=\"[]\" data-require-bs-version=\"5\" data-require-bs-caller=\"tooltip()\">\n<template>Expand</template>\n<button aria-expanded=\"false\" aria-label=\"Expand card\" class=\"bslib-full-screen-enter badge rounded-pill\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" style=\"height:1em;width:1em;fill:currentColor;\" aria-hidden=\"true\" role=\"img\"><path d=\"M20 5C20 4.4 19.6 4 19 4H13C12.4 4 12 3.6 12 3C12 2.4 12.4 2 13 2H21C21.6 2 22 2.4 22 3V11C22 11.6 21.6 12 21 12C20.4 12 20 11.6 20 11V5ZM4 19C4 19.6 4.4 20 5 20H11C11.6 20 12 20.4 12 21C12 21.6 11.6 22 11 22H3C2.4 22 2 21.6 2 21V13C2 12.4 2.4 12 3 12C3.6 12 4 12.4 4 13V19Z\"/></svg></button>\n</bslib-tooltip>\n<script data-bslib-card-init>bslib.Card.initializeAllCards();</script>\n</div>\n```\n\n:::\n:::\n\n\n\n:::\n\n::: {.g-col-4}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"card bslib-card bslib-mb-spacing html-fill-item html-fill-container\" data-bslib-card-init data-require-bs-caller=\"card()\" data-require-bs-version=\"5\">\n<div class=\"card-header\">\nüòê\nQuarto quick tools are difficult to make as it's a CLI!\n</div>\n<div class=\"card-body bslib-gap-spacing html-fill-item html-fill-container\" style=\"margin-top:auto;margin-bottom:auto;flex:1 1 auto;\">\n<p>RMarkdown has lovely features like `blogdown::new_post()` that can't really be added to Quarto as it's a CLI! Usability tools would need to be added to the CLI instead of the wrapping package.</p>\n</div>\n<div class=\"card-footer\">\n‚öôÔ∏è\nThis doesn't need to change\n<p>That's the nature of the beast</p>\n</div>\n<script data-bslib-card-init>bslib.Card.initializeAllCards();</script>\n</div>\n```\n\n:::\n:::\n\n\n\n:::\n\n::: {.g-col-4}\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"card bslib-card bslib-mb-spacing html-fill-item html-fill-container\" data-bslib-card-init data-require-bs-caller=\"card()\" data-require-bs-version=\"5\">\n<div class=\"card-header\">\n‚ùå\nQuarto occassionally summons demons\n</div>\n<div class=\"card-body bslib-gap-spacing html-fill-item html-fill-container\" style=\"margin-top:auto;margin-bottom:auto;flex:1 1 auto;\">\n<p>It doesn't, that's a lie.</p>\n</div>\n<div class=\"card-footer\">\n‚öôÔ∏è\nNeeds to change. Raised issue on GitHub.\n</div>\n<script data-bslib-card-init>bslib.Card.initializeAllCards();</script>\n</div>\n```\n\n:::\n:::\n\n\n\n:::\n\n:::\n\n## Feature creep\n\nEver heard of feature creep? She's a beast.\n\nI decided the fastest way to record these would be in a Google Sheet that I can then read easily into a Shiny app. But then I thought - I'd love to [MoSCoW this](https://en.wikipedia.org/wiki/MoSCoW_method). Which then led to me building up a bunch of data validation rules:\n\n![](change-desire-screenshot.png)\n... and gosh, I'd discovered I was procrastinating. I'm really aiming to up my data blogging output and feel part of the tech community again. So, let's settle with something that's workable... an iOS note that I can also modify on my laptop.\n\n![](IMG_3420.PNG)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/bslib-component-js-0.7.0/components.min.js\"></script>\n<script src=\"../../site_libs/bslib-component-js-0.7.0/web-components.min.js\" type=\"module\"></script>\n<link href=\"../../site_libs/bslib-component-css-0.7.0/components.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/bslib-tag-require-0.7.0/tag-require.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}