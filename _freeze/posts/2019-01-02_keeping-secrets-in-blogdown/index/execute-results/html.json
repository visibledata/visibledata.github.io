{
  "hash": "e0b71cdc30622804bd6f6d91214f1495",
  "result": {
    "markdown": "---\ntitle: Keeping secrets in blogdown\nauthor: ''\ndate: '2019-01-02'\nslug: keeping-secrets-in-blogdown\ncategories: []\ntags:\n  - API\ndescription: \"Keeping API keys and passwords secret in a blogdown blog using the static/ folder and the secret package.\"\n---\n\nSometimes we need to keep secrets. For instance, [if you want to use `ggmap` after July 2018](https://www.visibledata.co.uk/posts/2019-02-18_oxford-centres/) you need an API key and to provide billing details to Google. You **definitely** don't want to accidentally include your personal API key in a blog post.\n\nThis blog is generated using the awesome `blogdown` package, which means all this wonderful stuff is generated from RMarkdown documents that are available in the Github repository [visibledata/visibledata.github.io](https://github.com/visibledata/visibledata.github.io) that powers the website. It's therefore extremely important I don't accidentally include the key anywhere in my repository. But I want to consistently use API keys anywhere in the website.\n\nIf you want to do something similar, I recommend following these instructions:\n\n1. Add the following lines to your `.gitignore` file\n\n- data/secret-keys.R\n\n- data/secret-vault.vault\n\n2. Add these changes to a commit and push these to Github.\n\n3. Don't proceed until you've done step 2. You need to protect these two files.\n\n4. You're going to need to create an SSH key, so either load up the terminal (-nix systems) or Command Prompt (Windows) and run the following code (I chose `blog_vault` as the name for my file).\n\n::: {.cell}\n\n```{.bash .cell-code}\nssh-keygen -t rsa\n# Enter file in which to save the key (/Users/charliejhadley/.ssh/id_rsa):\n```\n:::\n\nNow we're going to create the `static/data/secret-keys.R` file where we will iteratively add our tokens and other secrets using [Gabor Csardi's awesome `secret` package](https://github.com/gaborcsardi/secret).\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"secret\")\nlibrary(\"here\")\n\n## ==== Create a vault\n## Run these lines ONCE ONLY\nmy_vault <- here(\"data\", \"secret-vault.vault\")\ncreate_vault(my_vault)\n\n## ==== Create a user\n## This uses the ssh-key we created above, run this code ONCE ONLY\nkey_dir = \"/Users/charliejhadley/.ssh\"\ncharliejhadley_public_key <- file.path(key_dir, \"blog_vault.pub\")\ncharliejhadley_private_key <- file.path(key_dir, \"blog_vault\")\nadd_user(\"charliejhadley\", charliejhadley_public_key, vault = my_vault)\n```\n:::\n\nOnce you've run this code, I'd recommend you explicitly comment out everything except for the first two lines.\n\nNow we can add a secrets to the vault using `add_secret()`.\n\n::: {.cell}\n\n```{.r .cell-code}\nadd_secret(\"ggmaps_fake_key\", \"foobar\", user = \"charliejhadley\", vault = my_vault)\n\nadd_secret(\"ggmap_key_2020\", \"AIzaSyABTxwpq4Ds2rOgOtblyZeco_QKXJdPruo\", user = \"charliejhadley\", vault = my_vault)\n```\n:::\n\nPersonally, I'm deleting secrets from the `static/data/secret-keys.R` after I add them. I'd recommend that you do the same. **Remember that if you have not disabled your .RHistory then your keys will be available to ne'er-do-wells in a plain text file.**\n\nNow I can use my keys safely in blogposts, as follows:\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"here\")\nlibrary(\"secret\")\nlibrary(\"tidyverse\")\nlibrary(\"ggmap\")\n\nmy_vault <- here(\"data\", \"secret-vault.vault\")\ncharliejhadley_private_key <- file.path(\"~/.ssh\", \"blog_vault\")\nggmaps_rstats_key <- get_secret(\"ggmap_key_2020\", key = charliejhadley_private_key, vault = my_vault)\n\nregister_google(key = ggmaps_rstats_key)\nbase_map <- get_googlemap(center = c(2.2945, 48.858222), maptype = \"roadmap\")\nggmap(base_map)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\nI highly recommend [Hadley Wickham's httr vignette on managing secrets](https://cran.r-project.org/web/packages/httr/vignettes/secrets.html) if you want to learn more.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": null
  }
}